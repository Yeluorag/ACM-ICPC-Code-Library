#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

char s[10005];
int cnt[30];

int prime[205]={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,
127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,
283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,
467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,
661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,
877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997};

int main()
{
    int n;
    char s[10001];
    int c[1001];
    bool f[1001];
    gets(s);
    n = strlen(s);
    for (int i = 0; i < n; i++)
        c[s[i]]++;

    int k = 0;
    for (int i = 0; i < 256; i++)
        if (c[i] > c[k]) k = i;

    memset(f, true, sizeof(f));
    for (int i = 2; i * i <= n; i++)
        if (f[i])
            for (int j = i * i; j <= n; j += i)
                f[j] = false;

    f[1] = true;
    for (int i = 2; i + i <= n; i++)
        f[i] = false;

    for (int i = 1; i <= n; i++)
        if (!f[i])
        {
            if (c[k] == 0)
            {
                puts("NO");
                return 0;
            }
            c[s[i - 1] = k]--;
        }

    k = 0;
    for (int i = 1; i <= n; i++)
        if (f[i])
        {
            while (c[k] == 0) k++;
            c[s[i - 1] = k]--;
        }
    puts("YES");
    puts(s);
    return 0;
}